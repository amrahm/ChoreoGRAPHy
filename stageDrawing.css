#stageDrawing {
    background: rgb(220, 220, 220);
}

#stageDrawingControls {
    grid-area: 3 / 8 / 6 / 9;
    justify-self: stretch;
    /* background: violet; */
    z-index: 1000;
    display: grid;
    grid-gap: 20px 0;
    grid-template: var(--grid-template);
    --grid-template:
        [row1-start] "undo . redo" min-content [row1-end]
        [row2-start] ". . ." auto [row2-end]
        [row3-start] "showGrid showGrid showGrid" min-content [row3-end]
        [row4-start] "gridScale gridScale gridScale" min-content [row4-end]
        [row5-start] "snapToGrid snapToGrid snapToGrid" min-content [row5-end]
        [row6-start] "showDancerSize showDancerSize showDancerSize" min-content [row6-end]
        [row7-start] ". . ." auto [row7-end]
        [row8-start] "done done done" min-content [row8-end]
        / 2fr 1fr 2fr;
    font: 1em var(--sans-font);
}

#undo {
    grid-area: undo;
}

#redo {
    grid-area: redo;
}


.gridOption {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    align-content: center;
    align-self: center;
    justify-self: flex-end;
    justify-content: flex-end;
    text-align: right;
}
.gridOption > p {
    margin: 0 10px 0 0;
}

.checkbox { position: relative; }
.checkbox label {
    width: 20px;
    height: 20px;
    cursor: pointer;
    position: absolute;
    top: 0;
    left: 0;
    background: #888;
    border-radius: 4px;
    box-shadow: inset 1px 2px 4px rgba(0, 0, 0, 0.5),
                inset -1px -1px 2px rgba(0, 0, 0, 0.3);
}
.checkbox > label:after {
    content: 'âœ“';
    position: absolute;
    top: -15%;
    left: 10%;
    color: white;
    font: 1.2em var(--sans-font);
    opacity: 0;
}
.checkbox > label:hover::after { opacity: 0.3; }
.checkbox > input[type=checkbox] { visibility: hidden; }
.checkbox > input[type=checkbox]:checked + label:after { opacity: 1; }
.checkbox > input[type=checkbox]:disabled + label {
    cursor: auto;
    background: #CCC;
    box-shadow: inset 0 0 4px rgba(0, 0, 0, 0.3);
}
.checkbox > input[type=checkbox]:disabled + label:hover::after { opacity: 0; }
.checkbox > input[type=checkbox]:disabled:checked + label:after { opacity: 0.5; }

#showGrid { grid-area: showGrid; }
#gridScale { grid-area: gridScale; }
#gridScale > input {
    width: 2em;
    font: 1em var(--sans-font);
    text-align: right;
    padding-right: 5px;
}
#gridScaleValue.invalid {
    background-color: rgb(255, 155, 155);
}
#gridScale.disabled { color: gray; }


#snapToGrid { grid-area: snapToGrid; }
#snapToGrid.disabled { color: gray; }
#showDancerSize { grid-area: showDancerSize; }

#confirmStage {
    grid-area: done;
    height: 100px;
    width: 100%;
    background-image: url("graphics/DoneIcon.png");
    align-content: flex-end;
}
#confirmStage > div { flex: 1 2 50px; }
#confirmStage > p { flex: 1 1 50%; }
#confirmStage:active { color: hsl(106, 95%, 43%); }
#confirmStage:disabled { background-image: url("graphics/DoneIconDisabled.png"); }
#confirmStage:active:disabled { color: hsl(0, 100%, 32%); }

#drawingInstruction {
    background-color: white;
    color: black;
    font: 2em var(--sans-font);
    grid-area: formationTitle;
    text-align: center;
    align-self: center;
    z-index: 1000;
}

#stageView.drawing {
    cursor: crosshair;
}

#stageView.select {
    cursor: default !important;
}